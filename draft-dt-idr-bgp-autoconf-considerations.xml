<?xml version="1.0"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd"
[
<!ENTITY RFC2119 SYSTEM "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC6830 SYSTEM "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6830.xml">
<!ENTITY LLDP SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.acee-idr-lldp-peer-discovery">
<!ENTITY L3DL SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-lsvr-l3dl.xml">
<!ENTITY L3DL-ULPC SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-lsvr-l3dl-ulpc.xml">
<!ENTITY AUTO-SESSION SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.raszuk-idr-bgp-auto-session-setup">
<!ENTITY XU-AUTODISCOVERY SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.xu-idr-neighbor-autodiscovery.xml">
<!ENTITY LSOE SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-lsvr-lsoe.xml">
<!ENTITY L3DL-SIGNING SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-lsvr-l3dl-signing.xml">
]>
<?rfc comments="yes"?>
<?rfc compact="yes"?>
<?rfc inline="yes"?>
<?rfc sortrefs="yes"?>
<?rfc subcompact="yes"?>
<?rfc symrefs="yes"?>
<?rfc toc="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc tocompact="yes"?>
<rfc category="info" docName="draft-dt-idr-bgp-autoconf-considerations-00" ipr="trust200902">
    <front>
        <title abbrev="BGP Peer Auto-Config Reqs">Requirements and Considerations in BGP Peer Auto-Configuration</title>
        <author fullname="Randy Bush" initials="R." surname="Bush">
            <organization>Arrcus, Inc. &amp; Internet Initiative Japan</organization>
            <address>
                <postal>
                    <street>5147 Crystal Springs</street>
                    <city>Bainbridge Island</city>
                    <region>WA</region>
                    <code>98110</code>
                    <country>US</country>
                </postal>
                <email>randy@psg.com</email>
            </address>
        </author>
        <author fullname="Jie Dong" initials="J." surname="Dong">
            <organization>Huawei Technologies</organization>
            <address>
                <postal>
                    <street>Huawei Campus, No. 156 Beiqing Road</street>
                    <city>Beijing</city>
                    <code>100095</code>
                    <country>China</country>
                </postal>
                <email>jie.dong@huawei.com</email>
            </address>
        </author>
        <author role="editor" fullname="Jeffrey Haas" initials="J." surname="Haas">
            <organization>Juniper Networks</organization>
            <address>
                <postal>
                    <street>1133 Innovation Way</street>
                    <city>Sunnyvale</city>
                    <region>CA</region>
                    <code>94089</code>
                    <country>US</country>
                </postal>
                <email>jhaas@juniper.net</email>
            </address>
        </author>
        <author role="editor" fullname="Warren Kumari" initials="W." surname="Kumari">
            <organization>Google</organization>
            <address>
                <postal>
                    <street>1600 Amphitheatre Parkway</street>
                    <city>Mountain View</city>
                    <region>CA</region>
                    <code>94043</code>
                    <country>US</country>
                </postal>
                <email>warren@kumari.net</email>
            </address>
        </author>
        <date month="January" year="2021" />
        <abstract>
            <t>This draft is an exploration of the requirements, the
            alternatives and trade-offs in BGP peer auto-discovery at various
            layers in the stack. It is based on discussions in the IDR WG BGP
            Autoconf Design Team. The current target environment is the
            datacenter, while it is considered by the design team to not to
            preclude the work on WAN deployment in the future. This document is
            not intended to become an RFC.</t>
        </abstract>
    </front>
    <middle>
        <section anchor="intro" title="Introduction">
            <t>This draft is an exploration of the requirements, the
            alternatives and trade-offs in BGP peer auto-discovery at various
            layers in the stack. It is based on discussions in the IDR WG BGP
            Autoconf Design Team. The current target environment is the
            datacenter, while it is considered by the design team to not to
            preclude the analysis of WAN deployment in the future.</t>
        </section>
        <section title="Backgrounds and Requirements">
            <t>Previous discussion in BGP autoconf design team converged on a
            number of aspects of the BGP auto-configuration problem.</t>
            <section title="The Scope">
                <t>The current target environment has BGP used as the underlay
                routing protocol in data center network. While it is also
                considered by the design team to not to preclude the work on
                WAN in future.</t>
            </section>
            <section title="Assumptions">
                <t>
                    <list style="symbols">
                        <t>BGP OPEN message will do the heavy lifting in BGP
                        session establishment.</t>
                        <t>Before BGP OPEN message is sent, there is BGP
                        auto-discovery and there is choosing peers.</t>
                        <t>BGP auto-discovery should not do anything that could
                        be done by BGP OPEN message.</t>
                        <t>BGP peering could be selective, every BGP speaker
                        may not want to peer with every other BGP speaker.</t>
                        <t>BGP speakers does not know the potential peers' IP
                        addresses and AS number.</t>
                        <t>After BGP auto-discovery, it would be nice if
                        another exchange was not needed before BGP OPEN.</t>
                    </list>
                </t>
            </section>
            <section title="Summary of Requirements">
                <t>The set of requirements that have been agreed by the design
                team are as follows: 
                <list style="symbols">
                    <t>Support IPv4 and IPv6 address families, but do not
                    assume both are available.</t>
                    <t>Support discovery of the peering IP addresses for the
                    BGP session endpoints.</t>
                    <t>Support using either a device's interface address or one
                    of its loopback addresses for the BGP session endpoint.</t>
                    <t>Support discovery of the peers' ASs.</t>
                    <t>Support discovery of the set of possible peers, and
                    optionally each one's attributes, which can be a deployment
                    defined set, e.g.: leaf, spine, ice cream flavor, etc.
                    These attributes are arbitrary and operator dependent. No
                    assumptions about this should be made, code points
                    assigned,, etc.</t>
                    <t>Support to agree on any BGP session authentication and
                    parameters.</t>
                    <t>Support to enable Layer 3 link liveness detection, such
                    as BFD.</t>
                </list></t>
            </section>
            <section title="Simplicity">
                <t>The goal is to provide the minimal set of configuration
                parameters needed by BGP OPEN to successfully start a BGP
                peering. The goal is specifically not to replace or conflict
                with data exchanged during BGP OPEN. Multiple sources of truth
                are a recipe for complexity and hence painful errors.</t>
                <t>Simplicity is the key. Features not absolutely needed will
                not be included in the design. While the mechanism also needs
                some scalability for information which may be proved necessary
                in the future.</t>
            </section>
        </section>
        <section title="Operator Configuration">
            <t>With BGP auto-discovery, some configuration of BGP is still
            needed. Operator configuration should be able to decide at least
            the following: 
            <list style="symbols">
                <t>Select or otherwise filter which peers to actually try to
                send BGP OPEN message.</t>
                <t>Decide the parameters to use, e.g.: 
                <list style="symbols">
                    <t>IP addressing: IPv4 or IPv6</t>
                    <t>Interface for peerig: Loopback, or Direct</t>
                    <t>Any special forwarding or routing needed for reaching
                    the prospective peer, e.g., loopback.</t>
                    <t>AS numbering.</t>
                    <t>BGP Authentication Options.</t>
                </list></t>
            </list></t>
        </section>
        <section title="Considerations on Design Principles">
            <t>This section summarizes the considerations of possible criteria
            for the design of BGP auto-discovery mechanism, which may need
            further discussion in a wider community than the design team (e.g.
            the IDR WG).</t>
            <t>The network layer of the discovery mechanism: 
            <list style="symbols">
                <t>Layer 2: e.g. based on ethernet</t>
                <t>Layer 3: which is generic for any link-layer protocol</t>
            </list></t>
            <t>Relationship with BGP: 
            <list style="symbols">
                <t>Independent from BGP session establishment</t>
                <t>Not affect on BGP session establishment and routing
                exchange, other than the interactions for triggering the
                setup/removal of peer session based on discovery mechanism</t>
                <t>Make use of existing BGP protocol for automating the BGP
                session bring-up</t>
            </list></t>
            <t>Other criteria: 
            <list style="symbols">
                <t>Make use of a currently implemented and deployed protocol in
                data center.</t>
                <t>Widely applicable to a range of routing and similar
                protocols which need layer 3 discovery and characterization</t>
                <t>Length of the message size supported</t>
                <t>Extensibility</t>
            </list></t>
        </section>
        <section title="Analysis to Candidate Approaches">
            <section title="BGP Peer Discovery at Layer Two">
                <t>BGP Discovery at Layer-2 would entail finding potential
                peers on a LAN or on Point-to-Point links, discovering their
                Layer-3 attributes such as IP addresses, etc.</t>
                <t>There are two available candidates for peer discovery at
                Layer-2, one is based on Link Layer Discovery Protocol (LLDP),
                the other one is based on Layer 3 Discovery Protocol, L3DL 
                <xref target="I-D.ietf-lsvr-l3dl" />.</t>
                <section title="LLDP based Approach">
                    <t>LLDP is a widely deployed protocol with implementations
                    in most devices in data center. Currently it does not
                    reveal Layer-3 information such as IP addresses. LLDP has a
                    limitation of single PDU size. There is an early LLDPv2
                    development to extend this in IEEE.</t>
                    <t>
                    <xref target="I-D.acee-idr-lldp-peer-discovery" /> describes
                    how to use the LLDP IETF Organizationally Specific TLV to
                    augment the LLDP TLV set to exchange BGP Config Sub-TLVs
                    signaling: 
                    <list style="symbols">
                        <t>AFI</t>
                        <t>IP address (IPv4 or IPv6)</t>
                        <t>Local AS number</t>
                        <t>Local BGP Identifier (AKA, BGP Router ID)</t>
                        <t>Session Group-ID</t>
                        <t>BGP Session Capabilities</t>
                        <t>Key Chain</t>
                        <t>Local Address (as BGP Next Hop).</t>
                    </list></t>
                    <t>Which of these are really necessary could be
                    discussed.</t>
                </section>
                <section title="L3DL based Approach">
                    <t>L3DL 
                    <xref target="I-D.ietf-lsvr-l3dl" /> is an ongoing
                    development in the IETF LSVR Working Group with the goals
                    of discovering IP Layer-3 attributes of links, such as
                    neighbor IP addressing, logical link IP encapsulation
                    abilities, and link liveness which may then be disseminated
                    for the use of BGP-SPF and similar protocols.</t>
                    <t>L3DL Upper Layer Protocol Configuration, 
                    <xref target="I-D.ietf-lsvr-l3dl-ulpc" />, details
                    signaling the minimal set of parameters needed to start a
                    BGP session with a discovered peer. Details such as
                    loopback peering are handled by attributes in the L3DL
                    protocol itself. The information which can be discovered by
                    L3DL is 
                    <list style="symbols">
                        <t>AS number</t>
                        <t>Local IP address, IPv4 or IPv6, and</t>
                        <t>BGP Authentication.</t>
                    </list></t>
                    <t>L3DL and L3DL-ULPC have well-specified security
                    mechanisms, see 
                    <xref target="I-D.ietf-lsvr-l3dl-signing" />.</t>
                    <t>The functionality of L3DL-ULPC is similar but not quite
                    the same as the needs of IDR Design Team. E.g., L3DL is
                    designed to meet more complex needs. L3DL's predecessor,
                    LSOE 
                    <xref target="I-D.ietf-lsvr-lsoe" />, was simpler and might
                    be a better candidate for adaptation. If needed the design
                    of LSOE may be customized for the needs of BGP peer auto-
                    disovery.</t>
                    <t>Unlike LLDP, L3DL has only one implementation, and LSOE
                    has only one open source implementation, and neither is
                    significantly deployed.</t>
                </section>
            </section>
        </section>
        <section title="BGP peer Discovery at Layer Three">
            <t>Discovery at Layer-3 can assume IP addressability, though the IP
            addresses of potential peers are not known a priori and need to be
            discovered before further negotiation. IP multicast may be a good
            choice to address the above concern.</t>
            <t>The possible problem would appear to discovery at Layer-3 is
            that one may not know whether to use IPv4 or IPv6.  This might be
            exacerbated by the possibility of a potential peer not being on the
            local subnet, and hence broadcast and similar techniques may not be
            applicable. While in data center network or networks in a single
            administrative domain, such issue could be easily solved.</t>
            <t>If one can assume that the BGP session is based on
            point-to-point link, then discovery might try IPv6 link-local or
            even IPv4 link- local. A link broadcast or multicast protocol may
            also be used. For switched or bridged multi-point which is at least
            on the same subnet, VLAN, etc., multicast or broadcasts might be a
            viable approach.</t>
            <t>There are two available candidates for BGP peer discovery at
            Layer-3, one is based on extending BGP with new Hello message for
            peer auto- discovery, the other one is based on reusing BGP OPEN
            message format for peer auto-discovery.</t>
            <section title="New BGP Hello Message based Approach">
                <t>
                <xref target="I-D.xu-idr-neighbor-autodiscovery" /> describes a
                BGP neighbor discovery mechanism which is based on a newly
                defined UDP based BGP Hello message. The BGP Hello message is
                sent in multicast to discover the directly connected BGP peers.
                According to the message header format and the TLVs carried in
                the message, the information which can be signaled is: 
                <list style="symbols">
                    <t>AS number</t>
                    <t>BGP Identifier</t>
                    <t>Accepted ASN list</t>
                    <t>Peering address (IPv4 or IPv6)</t>
                    <t>Local prefix (for loopback)</t>
                    <t>Link attributes</t>
                    <t>Neighbor state</t>
                    <t>BGP Authentication</t>
                </list>Which of these are really necessary could be
                discussed.</t>
            </section>
            <section title="BGP OPEN Message based Approach">
                <t>
                <xref target="I-D.raszuk-idr-bgp-auto-session-setup" /> describes
                a BGP neighbor discovery mechanism by reusing BGP OPEN message
                format with newly defined UDP port. The message is called BGP
                Session Explorer (BSE) packet and is sent in multicast. Since
                the message format is the same as BGP OPEN, the information
                which can be signaled is: 
                <list style="symbols">
                    <t>AS number</t>
                    <t>BGP Identifier</t>
                    <t>Peering address</t>
                </list></t>
            </section>
            <section title="Discovery at Layer Seven">
                <t>Peer discovery at Layer-7 requires application layer
                rendezvous mechanisms analogous to those used by LISP, 
                <xref target="RFC6830" /> or the Bitcoin Protocol.</t>
                <t>If the infrastructure is at all complex, e.g. multi-segment
                or worse, then it will need prior routing/forwarding knowledge
                in order to reach the rendezvous. In a BGP centric deployment
                this could pose a chicken and egg problem.</t>
                <t>Rendezvous approaches may appeal to deployments which favor
                a central control framework.</t>
                <t>On the other hand, those who favor distributed protocols
                will have the classic worries about fragility, redundancy,
                reliability, etc.</t>
            </section>
        </section>
        <section title="IANA Considerations">
            <t>This document makes no request of IANA.</t>
            <t>Note to RFC Editor: this section may be removed on publication
            as an RFC.</t>
        </section>
        <section title="Security Considerations">
            <t>None yet, but there will be many.</t>
        </section>
        <section title="Acknowledgments">
            <t>The IDR BGP Auto-Conf Design Team.</t>
        </section>
    </middle>
    <back>
        <references title="Normative References">
	    &RFC2119;
	</references>
        <references title="Informative References">
	    &LLDP;
	    &L3DL;
	    &AUTO-SESSION;
	    &XU-AUTODISCOVERY;
	    &L3DL-SIGNING;
	    &L3DL-ULPC;
	    &LSOE; 
	    &RFC6830;
	</references>
    </back>
</rfc>
